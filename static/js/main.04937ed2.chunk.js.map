{"version":3,"sources":["Apis/jsonPlacholder.js","actions/index.js","components/UserHeader.js","components/PostList.js","components/App.js","reducers/index.js","reducers/postReducer.js","reducers/usersReducer.js","index.js"],"names":["axios","create","baseURL","fetchPosts","dispatch","a","jsonplaceholder","get","response","type","payload","data","fetchUser","id","UserHeader","user","this","props","className","name","Component","connect","state","ownProps","users","find","userId","PostList","fetchPostsAndUsers","posts","map","post","title","body","renderList","getState","console","log","_","chain","uniq","forEach","value","App","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"yNAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,yC,iBCeAC,EAAc,yDAAM,WAAMC,GAAN,eAAAC,EAAA,sEACLC,EAAgBC,IAAI,UADf,OACvBC,EADuB,OAG3BJ,EAAS,CAAEK,KAAM,cAAeC,QAASF,EAASG,OAHvB,2CAAN,uDAMdC,EAAY,SAACC,GAAD,8CAAQ,WAAMT,GAAN,eAAAC,EAAA,sEACFC,EAAgBC,IAAhB,iBAA8BM,IAD5B,OACnBL,EADmB,OAGzBJ,EAAS,CAAEK,KAAM,aAAcC,QAASF,EAASG,OAHxB,2CAAR,uDCrBnBG,E,uKAKQ,IACEC,EAASC,KAAKC,MAAdF,KAER,OAAKA,EAID,qBAAKG,UAAU,SAAf,SACKH,EAAKI,OAJH,S,GATMC,aAuBVC,eAJS,SAACC,EAAOC,GAC5B,MAAO,CAAER,KAAMO,EAAME,MAAMC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOU,EAASG,aAGlDL,CAAyBP,GCrBlCa,E,kLAEEX,KAAKC,MAAMW,uB,mCAIX,OAAOZ,KAAKC,MAAMY,MAAMC,KAAI,SAAAC,GACxB,OACA,sBAAKb,UAAU,OAAf,UACI,mBAAGA,UAAU,mCACb,sBAAKA,UAAU,UAAf,UACI,sBAAKA,UAAU,cAAf,UACI,6BAAKa,EAAKC,QACV,4BAAID,EAAKE,UAEb,cAAC,EAAD,CAAYP,OAAQK,EAAKL,cAPNK,EAAKlB,S,+BAepC,OACI,qBAAKK,UAAU,0BAAf,SACKF,KAAKkB,mB,GAzBCd,aAmCRC,eAJS,SAACC,GACrB,MAAO,CAAEO,MAAOP,EAAMO,SAGc,CAAED,mBFrCR,yDAAM,WAAOxB,EAAU+B,GAAjB,SAAA9B,EAAA,sEAC/BD,EAASD,KADsB,OAErCiC,QAAQC,IAAIF,IAAWN,OAKtBS,IAAEC,MAAMJ,IAAWN,OAClBC,IAAI,UACJU,OACAC,SAAQ,SAAA5B,GAAE,OAAIT,EAASQ,EAAUC,OACjC6B,QAXmC,2CAAN,0DEqCnBrB,CAAiDM,GCrCjD,SAASgB,IACpB,OACI,qBAAKzB,UAAU,eAAf,SACE,cAAC,EAAD,M,YCFK0B,kBAAgB,CAC3Bf,MCLW,WAAoC,IAArBP,EAAoB,uDAAZ,GAAIuB,EAAQ,uCAC9C,OAAQA,EAAOpC,MACX,IAAK,cACD,OAAOoC,EAAOnC,QAClB,QAAS,OAAOY,IDEpBE,MENW,WAA2C,IAArBF,EAAoB,uDAAZ,GAAIuB,EAAQ,uCACrD,OAAQA,EAAOpC,MACX,IAAK,aACF,MAAM,GAAN,mBAAWa,GAAX,CAAkBuB,EAAOnC,UACzB,QACI,OAAOY,MCGhBwB,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACL,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACM,cAACH,EAAD,MAENU,SAASC,cAAc,Y","file":"static/js/main.04937ed2.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default axios.create({\n    baseURL: 'https://jsonplaceholder.typicode.com',\n})","import jsonplaceholder from '../Apis/jsonPlacholder'\nimport _ from 'lodash'\n\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n   await dispatch(fetchPosts())\n   console.log(getState().posts);\n\n//   const userIds = _.uniq(_.map(getState().posts, 'userId'))\n//   userIds.forEach(id => dispatch(fetchUser(id)))\n\n    _.chain(getState().posts)\n    .map('userId')\n    .uniq()\n    .forEach(id => dispatch(fetchUser(id)))\n    .value();\n\n}\n\nexport const fetchPosts =  () => async dispatch => {\n    const response =  await jsonplaceholder.get('/posts')\n\n      dispatch({ type: 'FETCH_POSTS', payload: response.data})\n    }\n\nexport const fetchUser = (id) => async dispatch => {\n        const response = await jsonplaceholder.get(`/users/${id}`)\n\n        dispatch({ type: 'FETCH_USER', payload: response.data})\n    }\n\n\n    // MEMOIZED VERSION\n    // export const fetchUser = (id) => dispatch => {\n    //     _fetchUser(id, dispatch);\n    //   }\n    //       const _fetchUser = _.memoize( async (id, dispatch) => {\n    //           const response = await jsonplaceholder.get(`/users/${id}`)\n      \n    //           dispatch({ type: 'FETCH_USER', payload: response.data})\n    //       })","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nclass UserHeader extends Component {\n    // componentDidMount() {\n    //     this.props.fetchUser(this.props.userId)\n    // }\n\n    render() {\n        const { user } = this.props;\n\n        if (!user) {\n            return null;\n        }\n        return (\n            <div className=\"header\" >\n                {user.name}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { user: state.users.find(user => user.id === ownProps.userId) }\n}\n\nexport default connect(mapStateToProps)(UserHeader)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchPostsAndUsers } from '../actions'\nimport UserHeader from './UserHeader'\n\nclass PostList extends Component {\n    componentDidMount() {\n        this.props.fetchPostsAndUsers()\n    }\n    \n    renderList() {\n        return this.props.posts.map(post => {\n            return (\n            <div className=\"item\" key={post.id}>\n                <i className=\"large middle aligned icon user\" ></i>\n                <div className=\"content\">\n                    <div className=\"description\">\n                        <h2>{post.title}</h2>\n                        <p>{post.body}</p>\n                    </div>\n                    <UserHeader userId={post.userId} />\n                </div>\n            </div>\n                )\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"ui relaxed divided list\">\n                {this.renderList()}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { posts: state.posts}\n}\n\nexport default connect(mapStateToProps, { fetchPostsAndUsers })(PostList)\n","import React from 'react'\nimport  PostList  from './PostList'\n\nexport default function App() {\n    return (\n        <div className=\"ui container\">\n          <PostList />\n        </div>\n    )\n}\n","import { combineReducers } from 'redux'\nimport postsReducer from './postReducer'\nimport usersReducer from './usersReducer'\n\nexport default combineReducers({\n    posts: postsReducer,\n    users: usersReducer\n})","export default function posts(state = [], action) {\n    switch (action.type) {\n        case 'FETCH_POSTS':\n            return action.payload;\n        default: return state;\n    }\n}","export default function usersReducer(state = [], action) {\n    switch (action.type) {\n        case 'FETCH_USER':\n           return [...state, action.payload];\n           default:\n               return state;\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider, provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport App from './components/App'\nimport reducers from './reducers'\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store} >\n          <App />\n    </Provider>,\n    document.querySelector('#root')\n  \n)\n"],"sourceRoot":""}